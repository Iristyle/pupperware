version: '2'

services:
  puppet:
    hostname: puppet
    image: puppet/puppetserver
    ports:
      - 8140:8140
    environment:
      # DNS_ALT_NAMES must be set before starting the stack the first time,
      # and must list all the names under which the puppetserver can be
      # reached. 'puppet' must be one of them, otherwise puppetdb won't be
      # able to get a cert. Add other names as a comma-separated list
      - DNS_ALT_NAMES
      - PUPPETDB_SERVER_URLS=https://puppetdb:8081
    volumes:
      - ./code:/etc/puppetlabs/code/
      - ./puppet:/etc/puppetlabs/puppet/
      - ./serverdata:/opt/puppetlabs/server/data/puppetserver/

  # postgres:
  #   image: puppet/puppetdb-postgres
  #   environment:
  #     - POSTGRES_PASSWORD=puppetdb
  #     - POSTGRES_USER=puppetdb
  #   expose:
  #     - 5432
  #   volumes:
  #     - puppetdb-postgres-volume:/var/lib/postgresql/data/

  puppetdb:
    hostname: puppetdb
    image: puppet/puppetdb
    environment:
      # - TODO: looks like name "puppetdb should be randomizable?"
      - PUPPETDB_DATABASE_CONNECTION="//${PUPPETDB_HOST}:5432/puppetdb"
      - PUPPETDB_USER=${PUPPETDB_USER}
      - PUPPETDB_PASSWORD=${PUPPETDB_PASSWORD}
    ports:
      - 8080
      - 8081
    depends_on:
      - postgres
      - puppet
    volumes:
      - ./puppetdb/ssl:/etc/puppetlabs/puppet/ssl/

# An external volume is needed for postgres as when under Docker For Windows the files have a different
# owner that the starting process.
# ref: https://forums.docker.com/t/trying-to-get-postgres-to-work-on-persistent-windows-mount-two-issues/12456/4
#
# To create the volume use; docker volume create --name puppetdb-postgres-volume -d local
# To delete the volume use; docker volume rm puppetdb-postgres-volume
# volumes:
#   puppetdb-postgres-volume:
#     external: true
